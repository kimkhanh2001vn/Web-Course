//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMDT
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TapChiDB : DbContext
    {
        public TapChiDB()
            : base("name=TapChiDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdSection> AdSections { get; set; }
        public virtual DbSet<Advertisement> Advertisements { get; set; }
        public virtual DbSet<Chapter> Chapters { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<dacsac> dacsacs { get; set; }
        public virtual DbSet<dichvuchinh> dichvuchinhs { get; set; }
        public virtual DbSet<duanganday> duangandays { get; set; }
        public virtual DbSet<EmailSetting> EmailSettings { get; set; }
        public virtual DbSet<FooterContent> FooterContents { get; set; }
        public virtual DbSet<GoogleAPI> GoogleAPIs { get; set; }
        public virtual DbSet<Hinhtruot> Hinhtruots { get; set; }
        public virtual DbSet<HomePageSection> HomePageSections { get; set; }
        public virtual DbSet<HotNewCategory> HotNewCategories { get; set; }
        public virtual DbSet<Khachhang> Khachhangs { get; set; }
        public virtual DbSet<LogTestApplication> LogTestApplications { get; set; }
        public virtual DbSet<LogUserActivity> LogUserActivities { get; set; }
        public virtual DbSet<ManagerPage> ManagerPages { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<PageData> PageDatas { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PartnerLogo> PartnerLogoes { get; set; }
        public virtual DbSet<PostCategory> PostCategories { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<SelectivePost> SelectivePosts { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<ShopManagement> ShopManagements { get; set; }
        public virtual DbSet<SliderTop> SliderTops { get; set; }
        public virtual DbSet<SubscribedEmail> SubscribedEmails { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<taisaochontoi> taisaochontois { get; set; }
        public virtual DbSet<TempAdSection> TempAdSections { get; set; }
        public virtual DbSet<thue> thues { get; set; }
        public virtual DbSet<TinTucNew> TinTucNews { get; set; }
        public virtual DbSet<Topmenu> Topmenus { get; set; }
        public virtual DbSet<TuVan> TuVans { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserAdministrator> UserAdministrators { get; set; }
        public virtual DbSet<UserAdministratorRole> UserAdministratorRoles { get; set; }
        public virtual DbSet<UserBusiness> UserBusinesses { get; set; }
        public virtual DbSet<UserCategory> UserCategories { get; set; }
        public virtual DbSet<UserGrantPermission> UserGrantPermissions { get; set; }
        public virtual DbSet<UserPermission> UserPermissions { get; set; }
        public virtual DbSet<UserPost> UserPosts { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<VatLieu> VatLieux { get; set; }
        public virtual DbSet<Video> Videos { get; set; }
        public virtual DbSet<VisitorStatistic> VisitorStatistics { get; set; }
        public virtual DbSet<ChapterDetail> ChapterDetails { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<oldActiveDate> oldActiveDates { get; set; }
    
        public virtual int CollectTags(string tagsString)
        {
            var tagsStringParameter = tagsString != null ?
                new ObjectParameter("tagsString", tagsString) :
                new ObjectParameter("tagsString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CollectTags", tagsStringParameter);
        }
    
        public virtual int getAd()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getAd");
        }
    
        public virtual ObjectResult<getCategoryBranch_Result> getCategoryBranch(string categoryAlias)
        {
            var categoryAliasParameter = categoryAlias != null ?
                new ObjectParameter("categoryAlias", categoryAlias) :
                new ObjectParameter("categoryAlias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCategoryBranch_Result>("getCategoryBranch", categoryAliasParameter);
        }
    
        public virtual int getHotPosts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getHotPosts");
        }
    
        public virtual ObjectResult<getNext4PostsBU_Result> getNext4PostsBU(string alias)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNext4PostsBU_Result>("getNext4PostsBU", aliasParameter);
        }
    
        public virtual ObjectResult<getNextSameCategoryPost_Result> getNextSameCategoryPost(string alias)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNextSameCategoryPost_Result>("getNextSameCategoryPost", aliasParameter);
        }
    
        public virtual ObjectResult<getNextSameCategoryPostBU_Result> getNextSameCategoryPostBU(string alias)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNextSameCategoryPostBU_Result>("getNextSameCategoryPostBU", aliasParameter);
        }
    }
}
